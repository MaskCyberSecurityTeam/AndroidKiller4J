# 当前项目中只有日志级别为LOG的才需要进行记录，只是临时的信息可以使用INFO类型进行打印。
.level=INFO
# 执行的LogHandler，使用逗号隔开
# com.richardtang.androidkiller4j.log.UiConsoleHandler
handlers=java.util.logging.ConsoleHandler,com.richardtang.androidkiller4j.log.DateFileHandler
java.util.logging.ConsoleHandler.level=ALL
java.util.logging.ConsoleHandler.formatter=logging.formatter.MySimpleFormatter
# TextAreaHandler配置
# 为 Handler 指定默认的级别（默认为 Level.INFO）。
com.richardtang.androidkiller4j.log.UiConsoleHandler.level=ALL
# DateFileHandler配置
# 为 Handler 指定默认的级别（默认为 Level.ALL）。
com.richardtang.androidkiller4j.log.DateFileHandler.level=WARNING
# 指定要使用的 Formatter 类的名称（默认为 java.util.logging.XMLFormatter）。
com.richardtang.androidkiller4j.log.DateFileHandler.formatter=java.util.logging.SimpleFormatter
# 指定要写入到任意文件的近似最大量（以字节为单位）。如果该数为 0，则没有限制（默认为无限制）。
com.richardtang.androidkiller4j.log.DateFileHandler.limit=1024000
# 指定有多少输出文件参与循环（默认为 1）。
com.richardtang.androidkiller4j.log.DateFileHandler.count=1
# 指定是否应该将 FileHandler 追加到任何现有文件上（默认为 false）。
com.richardtang.androidkiller4j.log.DateFileHandler.append=true
# SimpleFormatter配置
java.util.logging.SimpleFormatter.format=%1$tY-%1$tb-%1$td %1$tl:%1$tM:%1$tS %2$s%n%4$s: %5$s%6$s%n